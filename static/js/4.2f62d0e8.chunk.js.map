{"version":3,"sources":["shared/constants.js","actions/index.js","shared/components/status.component.jsx","components/campaigns/campaigns-table.component.jsx","components/campaign-filter/campain-filter.component.jsx","shared/components/add-campaign.component.jsx","components/campaigns/campaigns-list.component.jsx"],"names":["Constants","USERS","getUsers","dispatch","getAction","SharedActionTypes","SHOW_LOADER","fetch","then","res","a","json","result","ActionTypes","ADD_USERS","catch","err","USER_FETCH_ERROR","finally","s","HIDE_LOADER","addCampaigns","payload","ADD_CAMPAIGN_INTO_LIST","saveChanges","ADD_CAMPAIGN_SAVE_CHANGES","SetFilters","SET_FILTERS","StatusComponent","active","className","CampaignsTableComponent","list","users","length","map","item","index","key","name","userID","user","find","x","id","toString","getUserName","userId","format","startDate","endDate","campaign","moment","num","budget","Budget","Math","abs","sign","toFixed","colSpan","align","FilterComponent","props","model","filters","startDateP","endDateP","byNameP","byName","Date","parse","state","onStartChange","bind","onEndChange","onSearchNameChange","searchStart","toastr","options","positionClass","hideDuration","timeOut","clear","val","this","setState","error","target","value","setFilters","InputGroup","autoComplete","isClearable","dateFormat","placeholderText","selected","onChange","Input","placeholder","InputGroupAddon","addonType","Button","color","size","onClick","icon","faSearch","React","Component","connect","campaignModel","addCampaign","bindActionCreators","useState","isClosed","useEffect","ev","copyState","onClose","newSt","plusicon","type","btnIcon","CampaignsListComponent","collectUsers","exposeAddition","AddCampaigns","onChangeFilters","userLoadingMessage","window","campaignsList","filterValue","filteredList","getFilteredList","filter","filtered","toLowerCase","indexOf"],"mappings":"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","file":"static/js/4.2f62d0e8.chunk.js","sourcesContent":["export const Constants = {\r\n   API_URLS: {\r\n      USERS: 'https://jsonplaceholder.typicode.com/users'\r\n   }\r\n};","import { getAction, ActionTypes } from \"./action-types\";\r\nimport { SharedActionTypes } from \"../shared/actions/action-types\";\r\nimport { Constants } from \"../shared/constants\";\r\n\r\nexport const getUsers = () => {\r\n   return (dispatch) => {\r\n      dispatch(getAction(SharedActionTypes.SHOW_LOADER));\r\n      fetch(Constants.API_URLS.USERS)\r\n         .then(async res => {\r\n            const result = await res.json();\r\n            dispatch(getAction(ActionTypes.ADD_USERS, result));\r\n         })\r\n         .catch(err => {\r\n            dispatch(getAction(ActionTypes.USER_FETCH_ERROR));\r\n         })\r\n         .finally(s => {\r\n            dispatch(getAction(SharedActionTypes.HIDE_LOADER));\r\n         });\r\n   }\r\n}\r\n\r\nexport const addCampaigns = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(getAction(ActionTypes.ADD_CAMPAIGN_INTO_LIST, payload));\r\n   }\r\n}\r\nexport const saveChanges = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(getAction(ActionTypes.ADD_CAMPAIGN_SAVE_CHANGES, payload));\r\n   }\r\n}\r\nexport const SetFilters = (payload) => {\r\n   return dispatch => {\r\n      dispatch(getAction(ActionTypes.SET_FILTERS, payload));\r\n   };\r\n}","import React from 'react';\r\n\r\nexport const StatusComponent = ({active}) => {\r\n   return (\r\n      active ? <span className='active'>Active</span> : <span className='inactive'>Inactive</span>\r\n   );\r\n}","import React from 'react';\r\nimport { StatusComponent } from '../../shared/components/status.component';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nexport const CampaignsTableComponent = ({ list, users }) => {\r\n\r\n   const getUserName = (userID) => {\r\n      let user = users.find(x => x.id.toString() === userID.toString());\r\n      return (user && user.name) || 'Unknown User';\r\n   }\r\n   const getStatus = (campaign) => {\r\n      return (moment() >= moment(campaign.startDate) && moment() <= moment(campaign.endDate))\r\n   }\r\n   const kFormatter = (num) => {\r\n      return Math.abs(num) > 999 ? Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'k' : Math.sign(num) * Math.abs(num)\r\n   }\r\n   return (\r\n      <div className=\"table-responsive mb-5\">\r\n         <table className=\"table\">\r\n            <thead>\r\n               <tr className='table-header'>\r\n                  <th>\r\n                     Name\r\n                        </th>\r\n\r\n                  <th>\r\n                     User Name\r\n                        </th>\r\n\r\n                  <th>\r\n                     Start Date\r\n                        </th>\r\n\r\n                  <th>\r\n                     End Date\r\n                        </th>\r\n\r\n                  <th>\r\n                     Active\r\n                        </th>\r\n\r\n                  <th>\r\n                     Budget\r\n                        </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {\r\n                  list && list.length ? list.map((item, index) => {\r\n                     return (\r\n                        <tr key={index}>\r\n                           <td>\r\n                              {item.name}\r\n                           </td>\r\n                           <td>\r\n                              {getUserName(item.userId)}\r\n                           </td>\r\n                           <td>\r\n                              <Moment format=\"MM/DD/YYYY\">\r\n                                 {item.startDate}\r\n                              </Moment>\r\n                           </td>\r\n                           <td>\r\n                              <Moment format=\"MM/DD/YYYY\">\r\n                                 {item.endDate}\r\n                              </Moment>\r\n                           </td>\r\n                           <td>\r\n                              <StatusComponent active={getStatus(item)} />\r\n                           </td>\r\n                           <td>\r\n                              {kFormatter(item.budget || item.Budget)} USD\r\n                           </td>\r\n                        </tr>\r\n                     )\r\n                  })\r\n                     : <tr>\r\n                        <td colSpan='6' align=\"center\">\r\n                           No Campaigns available!!\r\n                        </td>\r\n                     </tr>\r\n               }\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { InputGroup, Input, InputGroupAddon, Button } from 'reactstrap';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport toastr from 'toastr';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n\r\nexport class FilterComponent extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      if (props && props.model && props.model.filters) {\r\n         let { startDate: startDateP, endDate: endDateP, byName: byNameP } = props.model.filters;\r\n         startDateP = startDateP ? Date.parse(startDateP) : null;\r\n         endDateP = endDateP ? Date.parse(endDateP) : null;\r\n         this.state = { startDate: startDateP || null, endDate: endDateP || null, byName: byNameP || '' };\r\n      } else {\r\n         this.state = { startDate: null, endDate: null, byName: '' };\r\n      }\r\n      this.onStartChange = this.onStartChange.bind(this);\r\n      this.onEndChange = this.onEndChange.bind(this);\r\n      this.onSearchNameChange = this.onSearchNameChange.bind(this);\r\n      this.searchStart = this.searchStart.bind(this);\r\n      toastr.options = {\r\n         positionClass: 'toast-top-full-width',\r\n         hideDuration: 300,\r\n         timeOut: 5000\r\n      };\r\n      toastr.clear();\r\n   }\r\n   onStartChange(val) {\r\n      this.setState({ startDate: val, endDate: null });\r\n   }\r\n   onEndChange(val) {\r\n      toastr.clear();\r\n      if (moment(val) < moment(this.state.startDate)) {\r\n         toastr.error('End Date should be greater than Start Date.');\r\n         this.setState({ endDate: null });\r\n         return;\r\n      }\r\n      this.setState({ endDate: val });\r\n   }\r\n   onSearchNameChange(val) {\r\n      this.setState({ byName: val.target.value });\r\n   }\r\n   searchStart() {\r\n      toastr.clear();\r\n      if ((this.state.startDate && !this.state.endDate) || (this.state.endDate && !this.state.startDate)) {\r\n         toastr.error('Please select both dates.');\r\n         return;\r\n      }\r\n      this.props.setFilters(\r\n         {\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            byName: this.state.byName\r\n         });\r\n   }\r\n   render() {\r\n      const { startDate, endDate, byName } = this.state;\r\n\r\n      return (\r\n         <div className='row mb-1'>\r\n            <div className='col-sm-7 filter-inputs'>\r\n               <InputGroup>\r\n                  <ReactDatePicker autoComplete='off' id='startDate' isClearable dateFormat=\"MM/dd/yyyy\" placeholderText='Start Date' className='form-control mr-1' selected={startDate} onChange={this.onStartChange} />\r\n                  <ReactDatePicker autoComplete='off' id='endDate' isClearable dateFormat=\"MM/dd/yyyy\" placeholderText='End Date' className='form-control mr-1' selected={endDate} onChange={this.onEndChange} />\r\n                  <Input autoComplete='off' placeholder=\"Search by name\" value={byName} onChange={this.onSearchNameChange} />\r\n               </InputGroup>\r\n            </div>\r\n            <div className='col-sm-2 pl-0'>\r\n               <InputGroupAddon addonType=\"append\">\r\n                  <Button id='searchBtn' color=\"primary\" size=\"md\" onClick={this.searchStart} >\r\n                     <FontAwesomeIcon icon={faSearch} />\r\n                  </Button>\r\n               </InputGroupAddon>\r\n            </div>\r\n            <div className='col-sm-4'></div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FilterComponent);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addCampaigns, saveChanges } from \"../../actions\";\r\nimport { Input, InputGroupAddon, Button } from 'reactstrap';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave as btnIcon, faPlusCircle as plusicon } from '@fortawesome/free-solid-svg-icons';\r\nimport toastr from 'toastr';\r\n\r\nconst AddCampaignComponent = (props) => {\r\n   const [state, setState] = useState({ name: props.model.name || '', id: props.model.id || '', userId: props.model.userId || '', startDate: (props.model.startDate && new Date(props.model.startDate)) || null, endDate: (props.model.endDate && new Date(props.model.endDate)) || null, budget: props.model.budget || '', isClosed: props.model.isClosed });\r\n   useEffect(() => {\r\n      toastr.options = {\r\n         positionClass: 'toast-top-full-width',\r\n         hideDuration: 300,\r\n         timeOut: 5000\r\n      };\r\n      toastr.clear();\r\n   }, []);\r\n   const onChange = (ev) => {\r\n      let copyState = { ...state };\r\n      let name = ev.target.name, value = ev.target.value;\r\n      copyState[name] = value;\r\n      setState(copyState);\r\n      props.saveChanges(copyState);\r\n   }\r\n   const addCampaigns = () => {\r\n      toastr.clear();\r\n      const { name, id, userId, startDate, endDate, budget } = state;\r\n      if (!name || !id || !userId || !startDate || !endDate || !budget) {\r\n         toastr.error('Please fill all the fields.');\r\n         return;\r\n      }\r\n      props.addCampaigns([{ name, id, userId, startDate, endDate, budget }]);\r\n      setState({ name: '', id: '', userId: '', startDate: null, endDate: null, budget: '' });\r\n      onClose();\r\n   }\r\n   const onClose = () => {\r\n      toastr.clear();\r\n      let newSt = { name: '', id: '', userId: '', startDate: null, endDate: null, budget: '', isClosed: true };\r\n      setState(newSt);\r\n      props.saveChanges(newSt);\r\n   }\r\n   const onOpen = () => {\r\n      setState({ isClosed: false });\r\n      props.saveChanges({ isClosed: false });\r\n   }\r\n   const { name, id, userId, startDate, endDate, budget, isClosed } = state;\r\n   return (\r\n      <div className={'add-campaign container-fluid position-fixed ' + (isClosed ? ' closed ' : '')}>\r\n         {!isClosed ?\r\n            <>\r\n               <span className='close-icon' onClick={onClose}>\r\n                  <Button color=\"danger\" size=\"sm\" >\r\n                     &times;\r\n                     </Button>\r\n               </span>\r\n               <div className='row mt-4 mb-2'>\r\n                  <div className='col-sm-3'>\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input autoComplete='off' type='number' name='id' placeholder=\"Id\" value={id} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input autoComplete='off' name='name' placeholder=\"Name\" value={name} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <ReactDatePicker autoComplete='off' isClearable name='startDate' dateFormat=\"MM/dd/yyyy\" placeholderText='Start Date' className='form-control' selected={startDate} onChange={(val) => onChange({ target: { name: 'startDate', value: val } })} />\r\n                  </div>\r\n                  <div className='col-sm-3'>\r\n                  </div>\r\n               </div>\r\n               <div className='row mb-2'>\r\n                  <div className='col-sm-3'>\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input autoComplete='off' type='number' name='userId' placeholder=\"User ID\" value={userId} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input autoComplete='off' type='number' name='budget' placeholder=\"Budget\" value={budget} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <ReactDatePicker autoComplete='off' isClearable name='endDate' dateFormat=\"MM/dd/yyyy\" placeholderText='End Date' className='form-control' selected={endDate} onChange={(val) => onChange({ target: { name: 'endDate', value: val } })} />\r\n                  </div>\r\n                  <div className='col-sm-3'>\r\n\r\n                  </div>\r\n               </div>\r\n               <div className='row'>\r\n                  <div className='col-sm-3'></div>\r\n                  <div className='col-sm-6'>\r\n                     <div className='pull-right'>\r\n                        <InputGroupAddon addonType=\"append\">\r\n                           <Button color=\"primary\" size=\"md\" onClick={addCampaigns} >\r\n                              <FontAwesomeIcon icon={btnIcon} />\r\n                           &nbsp;Save\r\n                     </Button>\r\n                        </InputGroupAddon>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </>\r\n            : <>\r\n               <div className='row mt-2 cursor-pointer'>\r\n                  <div className='col-sm-5'></div>\r\n                  <div className='col-sm-3 text-center cursor-pointer' onClick={onOpen}>\r\n                     <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"primary\" size=\"md\" >\r\n                           <FontAwesomeIcon icon={plusicon} />\r\n                        </Button>\r\n                        <span className='ml-2 mt-1' >Add Campaign here...</span>\r\n                     </InputGroupAddon>\r\n                  </div>\r\n                  <div className='col-sm-3'></div>\r\n               </div>\r\n            </>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel.addCampaign\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return bindActionCreators({\r\n      addCampaigns: addCampaigns,\r\n      saveChanges: saveChanges\r\n   }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCampaignComponent);","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUsers, addCampaigns, SetFilters } from '../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { CampaignsTableComponent } from './campaigns-table.component';\r\nimport FilterComponent from '../campaign-filter/campain-filter.component';\r\nimport moment from 'moment';\r\nimport AddCampaignComponent from '../../shared/components/add-campaign.component';\r\n\r\nclass CampaignsListComponent extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.collectUsers = this.collectUsers.bind(this);\r\n      this.exposeAddition = this.exposeAddition.bind(this);\r\n      this.AddCampaigns = this.AddCampaigns.bind(this);\r\n      this.onChangeFilters = this.onChangeFilters.bind(this);\r\n      this.state = { userLoadingMessage: '' };\r\n   }\r\n   componentDidMount() {\r\n      this.collectUsers();\r\n      this.exposeAddition();\r\n   }\r\n   collectUsers() {\r\n      this.props.getUsers();\r\n   }\r\n   exposeAddition() {\r\n      window.AddCampaigns = this.AddCampaigns;\r\n   }\r\n   AddCampaigns(campaignsList) {\r\n      this.props.addCampaigns(campaignsList);\r\n   }\r\n   onChangeFilters(filterValue) {\r\n      this.props.SetFilters(filterValue);\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <FilterComponent setFilters={this.onChangeFilters} />\r\n            <CampaignsTableComponent list={this.props.filteredList} users={this.props.model.users} />\r\n            <AddCampaignComponent />\r\n         </div >\r\n      );\r\n   }\r\n}\r\nconst getFilteredList = (list, filter, users) => {\r\n   let filtered = [...list];\r\n   if (!filter) { return filtered; }\r\n   if (filter.startDate && filter.endDate) {\r\n      filtered = filtered.filter(item => {\r\n         return (\r\n            (moment(item.startDate) >= moment(filter.startDate) && moment(item.startDate) <= moment(filter.endDate))\r\n            ||\r\n            (moment(item.endDate) >= moment(filter.startDate) && moment(item.endDate) <= moment(filter.endDate)))\r\n      })\r\n   }\r\n   if (filter.byName) {\r\n      filtered = filtered.filter(item => item.name.toLowerCase().indexOf(filter.byName.toLowerCase()) !== -1);\r\n   }\r\n   return filtered;\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel,\r\n      filteredList: getFilteredList(state.campaignModel.campaignsList, state.campaignModel.filters, state.campaignModel.users)\r\n   };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return bindActionCreators({\r\n      getUsers: getUsers,\r\n      addCampaigns: addCampaigns,\r\n      SetFilters: SetFilters\r\n   }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignsListComponent);"],"sourceRoot":""}