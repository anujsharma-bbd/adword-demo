{"version":3,"sources":["shared/constants.js","actions/index.js","shared/components/status.component.jsx","components/campaigns/campaigns-table.component.jsx","components/campaign-filter/campain-filter.component.jsx","shared/components/add-campaign.component.jsx","components/campaigns/campaigns-list.component.jsx"],"names":["Constants","USERS","getUsers","dispatch","getAction","SharedActionTypes","SHOW_LOADER","fetch","then","res","a","json","result","ActionTypes","ADD_USERS","catch","err","USER_FETCH_ERROR","finally","s","HIDE_LOADER","addCampaigns","payload","ADD_CAMPAIGN_INTO_LIST","SetFilters","SET_FILTERS","StatusComponent","active","className","CampaignsTableComponent","list","users","length","map","item","index","key","name","userID","user","find","x","id","toString","getUserName","userId","format","startDate","endDate","campaign","moment","num","budget","Budget","Math","abs","sign","toFixed","colSpan","align","FilterComponent","props","state","byName","onStartChange","bind","onEndChange","onSearchNameChange","searchStart","toastr","options","positionClass","hideDuration","timeOut","clear","val","this","setState","error","target","value","setFilters","InputGroup","autoComplete","isClearable","dateFormat","placeholderText","selected","onChange","Input","placeholder","InputGroupAddon","addonType","Button","color","size","onClick","icon","faSearch","React","Component","connect","model","campaignModel","bindActionCreators","useState","isClosed","useEffect","ev","copyState","plusicon","type","btnIcon","CampaignsListComponent","collectUsers","exposeAddition","AddCampaigns","onChangeFilters","userLoadingMessage","window","campaignsList","filterValue","filteredList","getFilteredList","filter","filtered","toLowerCase","indexOf","filters"],"mappings":"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","file":"static/js/4.cffed2e8.chunk.js","sourcesContent":["export const Constants = {\r\n   API_URLS: {\r\n      USERS: 'https://jsonplaceholder.typicode.com/users'\r\n   }\r\n};","import { getAction, ActionTypes } from \"./action-types\";\r\nimport { SharedActionTypes } from \"../shared/actions/action-types\";\r\nimport { Constants } from \"../shared/constants\";\r\n\r\nexport const getUsers = () => {\r\n   return (dispatch) => {\r\n      dispatch(getAction(SharedActionTypes.SHOW_LOADER));\r\n      fetch(Constants.API_URLS.USERS)\r\n         .then(async res => {\r\n            const result = await res.json();\r\n            dispatch(getAction(ActionTypes.ADD_USERS, result));\r\n         })\r\n         .catch(err => {\r\n            dispatch(getAction(ActionTypes.USER_FETCH_ERROR));\r\n         })\r\n         .finally(s => {\r\n            dispatch(getAction(SharedActionTypes.HIDE_LOADER));\r\n         });\r\n   }\r\n}\r\nexport const addCampaigns = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(getAction(ActionTypes.ADD_CAMPAIGN_INTO_LIST, payload));\r\n   }\r\n}\r\nexport const SetFilters = (payload) => {\r\n   return dispatch => {\r\n      dispatch(getAction(ActionTypes.SET_FILTERS, payload));\r\n   };\r\n}","import React from 'react';\r\n\r\nexport const StatusComponent = ({active}) => {\r\n   return (\r\n      active ? <span className='active'>Active</span> : <span className='inactive'>Inactive</span>\r\n   );\r\n}","import React from 'react';\r\nimport { StatusComponent } from '../../shared/components/status.component';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nexport const CampaignsTableComponent = ({ list, users }) => {\r\n\r\n   const getUserName = (userID) => {\r\n      let user = users.find(x => x.id.toString() === userID.toString());\r\n      return (user && user.name) || 'Unknown User';\r\n   }\r\n   const getStatus = (campaign) => {\r\n      return (moment() >= moment(campaign.startDate) && moment() <= moment(campaign.endDate))\r\n   }\r\n   const kFormatter = (num) => {\r\n      return Math.abs(num) > 999 ? Math.sign(num) * ((Math.abs(num) / 1000).toFixed(1)) + 'k' : Math.sign(num) * Math.abs(num)\r\n   }\r\n   return (\r\n      <div className=\"table-responsive mb-5\">\r\n         <table className=\"table\">\r\n            <thead>\r\n               <tr className='table-header'>\r\n                  <th>\r\n                     Name\r\n                        </th>\r\n\r\n                  <th>\r\n                     User Name\r\n                        </th>\r\n\r\n                  <th>\r\n                     Start Date\r\n                        </th>\r\n\r\n                  <th>\r\n                     End Date\r\n                        </th>\r\n\r\n                  <th>\r\n                     Active\r\n                        </th>\r\n\r\n                  <th>\r\n                     Budget\r\n                        </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {\r\n                  list && list.length ? list.map((item, index) => {\r\n                     return (\r\n                        <tr key={index}>\r\n                           <td>\r\n                              {item.name}\r\n                           </td>\r\n                           <td>\r\n                              {getUserName(item.userId)}\r\n                           </td>\r\n                           <td>\r\n                              <Moment format=\"MM/DD/YYYY\">\r\n                                 {item.startDate}\r\n                              </Moment>\r\n                           </td>\r\n                           <td>\r\n                              <Moment format=\"MM/DD/YYYY\">\r\n                                 {item.endDate}\r\n                              </Moment>\r\n                           </td>\r\n                           <td>\r\n                              <StatusComponent active={getStatus(item)} />\r\n                           </td>\r\n                           <td>\r\n                              {kFormatter(item.budget || item.Budget)} USD\r\n                           </td>\r\n                        </tr>\r\n                     )\r\n                  })\r\n                     : <tr>\r\n                        <td colSpan='6' align=\"center\">\r\n                           No Campaigns available!!\r\n                        </td>\r\n                     </tr>\r\n               }\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { InputGroup, Input, InputGroupAddon, Button } from 'reactstrap';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport toastr from 'toastr';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n\r\nexport class FilterComponent extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { startDate: null, endDate: null, byName: '' };;\r\n      this.onStartChange = this.onStartChange.bind(this);\r\n      this.onEndChange = this.onEndChange.bind(this);\r\n      this.onSearchNameChange = this.onSearchNameChange.bind(this);\r\n      this.searchStart = this.searchStart.bind(this);\r\n      toastr.options = {\r\n         positionClass: 'toast-top-full-width',\r\n         hideDuration: 300,\r\n         timeOut: 5000\r\n      };\r\n      toastr.clear();\r\n   }\r\n   onStartChange(val) {\r\n      this.setState({ startDate: val, endDate: null });\r\n   }\r\n   onEndChange(val) {\r\n      toastr.clear();\r\n      if (moment(val) < moment(this.state.startDate)) {\r\n         toastr.error('End Date should be greater than Start Date.');\r\n         this.setState({ endDate: null });\r\n         return;\r\n      }\r\n      this.setState({ endDate: val });\r\n   }\r\n   onSearchNameChange(val) {\r\n      this.setState({ byName: val.target.value });\r\n   }\r\n   searchStart() {\r\n      toastr.clear();\r\n      if ((this.state.startDate && !this.state.endDate) || (this.state.endDate && !this.state.startDate)) {\r\n         toastr.error('Please select both dates.');\r\n         return;\r\n      }\r\n      this.props.setFilters(\r\n         {\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            byName: this.state.byName\r\n         });\r\n   }\r\n   render() {\r\n      const { startDate, endDate, byName } = this.state;\r\n      return (\r\n         <div className='row mb-1'>\r\n            <div className='col-sm-7 filter-inputs'>\r\n               <InputGroup>\r\n                  <ReactDatePicker autoComplete='off' id='startDate' isClearable dateFormat=\"MM/dd/yyyy\" placeholderText='Start Date' className='form-control mr-1' selected={startDate} onChange={this.onStartChange} />\r\n                  <ReactDatePicker autoComplete='off' id='endDate' isClearable dateFormat=\"MM/dd/yyyy\" placeholderText='End Date' className='form-control mr-1' selected={endDate} onChange={this.onEndChange} />\r\n                  <Input  autoComplete='off' placeholder=\"Search by name\" value={byName} onChange={this.onSearchNameChange} />\r\n               </InputGroup>\r\n            </div>\r\n            <div className='col-sm-2 pl-0'>\r\n               <InputGroupAddon addonType=\"append\">\r\n                  <Button id='searchBtn' color=\"primary\" size=\"md\" onClick={this.searchStart} >\r\n                     <FontAwesomeIcon icon={faSearch} />\r\n                  </Button>\r\n               </InputGroupAddon>\r\n            </div>\r\n            <div className='col-sm-4'></div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FilterComponent);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addCampaigns } from \"../../actions\";\r\nimport { Input, InputGroupAddon, Button } from 'reactstrap';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave as btnIcon, faPlusCircle as plusicon } from '@fortawesome/free-solid-svg-icons';\r\nimport toastr from 'toastr';\r\n\r\nconst AddCampaignComponent = (props) => {\r\n   const [state, setState] = useState({ name: '', id: '', userId: '', startDate: null, endDate: null, budget: '', isClosed: true });\r\n   useEffect(() => {\r\n      toastr.options = {\r\n         positionClass: 'toast-top-full-width',\r\n         hideDuration: 300,\r\n         timeOut: 5000\r\n      };\r\n      toastr.clear();\r\n   }, []);\r\n   const onChange = (ev) => {\r\n      let copyState = { ...state };\r\n      let name = ev.target.name, value = ev.target.value;\r\n      copyState[name] = value;\r\n      setState(copyState);\r\n   }\r\n   const addCampaigns = () => {\r\n      toastr.clear();\r\n      const { name, id, userId, startDate, endDate, budget } = state;\r\n      if (!name || !id || !userId || !startDate || !endDate || !budget) {\r\n         toastr.error('Please fill all the fields.');\r\n         return;\r\n      }\r\n      props.addCampaigns([{ name, id, userId, startDate, endDate, budget }]);\r\n      setState({ name: '', id: '', userId: '', startDate: null, endDate: null, budget: '' });\r\n   }\r\n   const onClose = () => {\r\n      toastr.clear();\r\n      setState({ name: '', id: '', userId: '', startDate: null, endDate: null, budget: '', isClosed: true });\r\n   }\r\n   const onOpen = () => {\r\n      setState({ isClosed: false });\r\n   }\r\n   const { name, id, userId, startDate, endDate, budget, isClosed } = state;\r\n   return (\r\n      <div className={'add-campaign container-fluid position-fixed ' + (isClosed ? ' closed ' : '')}>\r\n         {!isClosed ?\r\n            <>\r\n               <span className='close-icon' onClick={onClose}>\r\n                  <Button color=\"danger\" size=\"sm\" >\r\n                     &times;\r\n                     </Button>\r\n               </span>\r\n               <div className='row mt-4 mb-2'>\r\n                  <div className='col-sm-3'>\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input  autoComplete='off' type='number' name='id' placeholder=\"Id\" value={id} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input  autoComplete='off' name='name' placeholder=\"Name\" value={name} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <ReactDatePicker autoComplete='off' isClearable name='startDate' dateFormat=\"MM/dd/yyyy\" placeholderText='Start Date' className='form-control' selected={startDate} onChange={(val) => onChange({ target: { name: 'startDate', value: val } })} />\r\n                  </div>\r\n                  <div className='col-sm-3'>\r\n                  </div>\r\n               </div>\r\n               <div className='row mb-2'>\r\n                  <div className='col-sm-3'>\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input autoComplete='off' type='number' name='userId' placeholder=\"User ID\" value={userId} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <Input autoComplete='off' type='number' name='budget' placeholder=\"Budget\" value={budget} onChange={onChange} />\r\n                  </div>\r\n                  <div className='col-sm-2'>\r\n                     <ReactDatePicker autoComplete='off' isClearable name='endDate' dateFormat=\"MM/dd/yyyy\" placeholderText='End Date' className='form-control' selected={endDate} onChange={(val) => onChange({ target: { name: 'endDate', value: val } })} />\r\n                  </div>\r\n                  <div className='col-sm-3'>\r\n\r\n                  </div>\r\n               </div>\r\n               <div className='row'>\r\n                  <div className='col-sm-3'></div>\r\n                  <div className='col-sm-6'>\r\n                     <div className='pull-right'>\r\n                        <InputGroupAddon addonType=\"append\">\r\n                           <Button color=\"primary\" size=\"md\" onClick={addCampaigns} >\r\n                              <FontAwesomeIcon icon={btnIcon} />\r\n                           &nbsp;Save\r\n                     </Button>\r\n                        </InputGroupAddon>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </>\r\n            : <>\r\n               <div className='row mt-2 cursor-pointer'>\r\n                  <div className='col-sm-5'></div>\r\n                  <div className='col-sm-3 text-center cursor-pointer' onClick={onOpen}>\r\n                     <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"primary\" size=\"md\" >\r\n                           <FontAwesomeIcon icon={plusicon} />\r\n                        </Button>\r\n                        <span className='ml-2 mt-1' >Add Campaign here...</span>\r\n                     </InputGroupAddon>\r\n                  </div>\r\n                  <div className='col-sm-3'></div>\r\n               </div>\r\n            </>\r\n         }\r\n      </div>\r\n   )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return bindActionCreators({\r\n      addCampaigns: addCampaigns\r\n   }, dispatch);\r\n}\r\nexport default connect(null, mapDispatchToProps)(AddCampaignComponent);","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUsers, addCampaigns, SetFilters } from '../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { CampaignsTableComponent } from './campaigns-table.component';\r\nimport FilterComponent from '../campaign-filter/campain-filter.component';\r\nimport moment from 'moment';\r\nimport AddCampaignComponent from '../../shared/components/add-campaign.component';\r\n\r\nclass CampaignsListComponent extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.collectUsers = this.collectUsers.bind(this);\r\n      this.exposeAddition = this.exposeAddition.bind(this);\r\n      this.AddCampaigns = this.AddCampaigns.bind(this);\r\n      this.onChangeFilters = this.onChangeFilters.bind(this);\r\n      this.state = { userLoadingMessage: '' };\r\n   }\r\n   componentDidMount() {\r\n      this.collectUsers();\r\n      this.exposeAddition();\r\n   }\r\n   collectUsers() {\r\n      this.props.getUsers();\r\n   }\r\n   exposeAddition() {\r\n      window.AddCampaigns = this.AddCampaigns;\r\n   }\r\n   AddCampaigns(campaignsList) {\r\n      this.props.addCampaigns(campaignsList);\r\n   }\r\n   onChangeFilters(filterValue) {\r\n      this.props.SetFilters(filterValue);\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <FilterComponent setFilters={this.onChangeFilters} />\r\n            <CampaignsTableComponent list={this.props.filteredList} users={this.props.model.users} />\r\n            <AddCampaignComponent />\r\n         </div >\r\n      );\r\n   }\r\n}\r\nconst getFilteredList = (list, filter, users) => {\r\n   let filtered = [...list];\r\n   if (!filter) { return filtered; }\r\n   if (filter.startDate && filter.endDate) {\r\n      filtered = filtered.filter(item => {\r\n         return (\r\n            (moment(item.startDate) >= moment(filter.startDate) && moment(item.startDate) <= moment(filter.endDate))\r\n            ||\r\n            (moment(item.endDate) >= moment(filter.startDate) && moment(item.endDate) <= moment(filter.endDate)))\r\n      })\r\n   }\r\n   if (filter.byName) {\r\n      filtered = filtered.filter(item => item.name.toLowerCase().indexOf(filter.byName.toLowerCase()) !== -1);\r\n   }\r\n   return filtered;\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel,\r\n      filteredList: getFilteredList(state.campaignModel.campaignsList, state.campaignModel.filters, state.campaignModel.users)\r\n   };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return bindActionCreators({\r\n      getUsers: getUsers,\r\n      addCampaigns: addCampaigns,\r\n      SetFilters: SetFilters\r\n   }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignsListComponent);"],"sourceRoot":""}