{"version":3,"sources":["shared/actions/action-types.js","shared/components/async.component.jsx","components/not-found.component.jsx","routes.jsx","shared/components/loader.component.jsx","App.jsx","serviceWorker.js","store/initial-state.js","shared/initial-state.js","reducers/combined-reducer.js","reducers/campaign.reducer.js","shared/shared-reducer.js","store/store.js","index.jsx","actions/action-types.js"],"names":["SharedActionTypes","SHOW_LOADER","HIDE_LOADER","importComponent","notFoundComponent","className","style","height","AsyncCampaignsListComponent","props","state","component","isLoading","this","setState","then","default","catch","err","D","React","Component","Routes","path","exact","to","connect","model","sharedModel","isLoaderShown","Spinner","color","App","Boolean","window","location","hostname","match","initialState","users","filters","campaignsList","budget","SharedState","combinedReducer","combineReducers","campaignModel","action","type","ActionTypes","ADD_CAMPAIGN_INTO_LIST","payload","clears","ADD_USERS","SET_FILTERS","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message","GET_CAMPAIGNS_LIST","FETCH_USERS","USER_FETCH_ERROR","getAction","actionType"],"mappings":"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","file":"static/js/main.c9cd07db.chunk.js","sourcesContent":["export const SharedActionTypes = {\r\n   SHOW_LOADER: 'SHOW_LOADER',\r\n   HIDE_LOADER: 'HIDE_LOADER'\r\n};","import React from 'react';\r\n\r\nexport const asyncComponent = (importComponent) => {\r\n\r\n   class AsyncComponent extends React.Component {\r\n      constructor(props) {\r\n         super(props);\r\n         this.state = {\r\n            component: null,\r\n            isLoading: true\r\n         };\r\n      }\r\n      // adding feature of loading/spinner untill coponent gets loaded\r\n      componentDidMount() {\r\n         this.setState({\r\n            isLoading: true\r\n         });\r\n         importComponent().then(({ default: component }) => {\r\n            this.setState({\r\n               component: component,\r\n               isLoading: false\r\n            });\r\n         }).catch((err) => {\r\n            this.setState({\r\n               component: null,\r\n               isLoading: false\r\n            });\r\n         });\r\n\r\n      }\r\n      render() {\r\n         const { component: D, isLoading } = this.state;\r\n         return (\r\n            D ? <D {...this.props} /> : isLoading ? <div> loading ...</div> : null\r\n         );\r\n      }\r\n\r\n   }\r\n   return AsyncComponent;\r\n}","import React from 'react';\r\n\r\nexport const notFoundComponent = () => {\r\n   return (\r\n      <>\r\n         <div className=\"d-flex align-items-center justify-content-center\" style={{ height: '100vh' }}>\r\n            <div className='text-center'>\r\n               <div className='row'>\r\n                  <div className='col-sm-12'>\r\n                     <h1>\r\n                        404\r\n                  </h1>\r\n                  </div>\r\n               </div>\r\n               <div className='row'>\r\n                  <div className='col-sm-12'>\r\n                     <h3>\r\n                        Page not found !\r\n                  </h3>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};","import { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { notFoundComponent } from './components/not-found.component';\r\nimport { asyncComponent } from './shared/components/async.component';\r\nconst AsyncCampaignsListComponent = asyncComponent(() => import('./components/campaigns/campaigns-list.component'));\r\n\r\nexport const Routes = () => {\r\n   return (\r\n      <div className='router-container'>\r\n         <Router>\r\n            <Switch>\r\n               <Route path='/' exact>\r\n                  <Redirect to='/campaigns-list'></Redirect>\r\n               </Route>\r\n               <Route path='/campaigns-list' exact component={AsyncCampaignsListComponent}></Route>\r\n               <Route path='*' component={notFoundComponent}></Route>\r\n            </Switch>\r\n         </Router>\r\n      </div>\r\n   );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst LoaderComponent = (props) => {\r\n   const { isLoaderShown } = props.model;\r\n   return (\r\n      isLoaderShown ? <div className='screen-loader'> <Spinner color=\"dark\" /> </div> : null\r\n   )\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.sharedModel\r\n   }\r\n}\r\nexport default connect(mapStateToProps)(LoaderComponent);","import React from 'react';\nimport './assets/styles/app.scss';\nimport \"babel-polyfill\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'toastr/build/toastr.min.css'\nimport { Routes } from './routes';\nimport LoaderComponent from './shared/components/loader.component';\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Routes></Routes>\n      <LoaderComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n   users: [],\r\n   filters: null,\r\n   campaignsList: [{\r\n      'id': 1, 'name': 'Divavu', 'startDate': '9/19/2017', 'endDate': '3/9/2018', budget: 88377, 'userId': 3\r\n   },\r\n   {\r\n      'id': 2, 'name': 'Jaxspan', 'startDate': '11/21/2017', 'endDate': '2/21/2018', budget: 608715, 'userId': 6\r\n   },\r\n   {\r\n      'id': 3, 'name': 'Miboo', 'startDate': '11/1/2017', 'endDate': '6/20/2017', budget: 239507, 'userId': 7\r\n   },\r\n   {\r\n      'id': 4, 'name': 'Trilith', 'startDate': '8/25/2017', 'endDate': '11/30/2017', budget: 179838, 'userId': 1\r\n   },\r\n   {\r\n      'id': 5, 'name': 'Layo', 'startDate': '11/28/2017', 'endDate': '3/10/2018', budget: 837850, 'userId': 9\r\n   },\r\n   {\r\n      'id': 6, 'name': 'Photojam', 'startDate': '7/25/2017', 'endDate': '6/23/2017', budget: 858131, 'userId': 3\r\n   },\r\n   {\r\n      'id': 7, 'name': 'Blogtag', 'startDate': '6/27/2017', 'endDate': '1/15/2018', budget: 109078, 'userId': 2\r\n   },\r\n   {\r\n      'id': 8, 'name': 'Rhyzio', 'startDate': '10/13/2017', 'endDate': '4/25/2020', budget: 272552, 'userId': 4\r\n   },\r\n   {\r\n      'id': 9, 'name': 'Zoomcast', 'startDate': '9/6/2017', 'endDate': '11/10/2017', budget: 301919, 'userId': 8\r\n   },\r\n   {\r\n      'id': 10, 'name': 'Realbridge', 'startDate': '3/5/2018', 'endDate': '10/2/2017', budget: 505602, 'userId': 5\r\n   }]\r\n};","export const SharedState = {\r\n   isLoaderShown: false\r\n};","import { combineReducers } from 'redux';\r\nimport { CampaignReducer } from './campaign.reducer';\r\nimport { SharedReducer } from '../shared/shared-reducer';\r\n\r\nexport const combinedReducer = combineReducers({\r\n   campaignModel: CampaignReducer,\r\n   sharedModel: SharedReducer\r\n});","import { initialState } from \"../store/initial-state\";\r\nimport { ActionTypes } from \"../actions/action-types\";\r\n\r\nexport const CampaignReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ActionTypes.ADD_CAMPAIGN_INTO_LIST:\r\n         return {\r\n            ...state,\r\n            campaignsList: [...state.campaignsList, ...action.payload],\r\n            filters: { clears: true }\r\n         };\r\n      case ActionTypes.ADD_USERS:\r\n         return {\r\n            ...state,\r\n            users: [...state.users, ...action.payload]\r\n         };\r\n\r\n      case ActionTypes.SET_FILTERS:\r\n         return {\r\n            ...state,\r\n            filters: { ...state.filters, ...action.payload, clears: false }\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}","import { SharedActionTypes } from \"./actions/action-types\";\r\nimport { SharedState } from \"./initial-state.js\";\r\n\r\nexport const SharedReducer = (state = SharedState, action) => {\r\n   switch (action.type) {\r\n      case SharedActionTypes.SHOW_LOADER:\r\n         return {\r\n            ...state,\r\n            isLoaderShown: true\r\n         }\r\n      case SharedActionTypes.HIDE_LOADER:\r\n         return {\r\n            ...state,\r\n            isLoaderShown: false\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { combinedReducer } from '../reducers/combined-reducer';\r\n\r\nexport const store = createStore(combinedReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './assets/styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const ActionTypes = {\r\n   GET_CAMPAIGNS_LIST: 'GET_CAMPAIGNS_LIST',\r\n   ADD_CAMPAIGN_INTO_LIST: 'ADD_CAMPAIGN_INTO_LIST',\r\n   FETCH_USERS: 'FETCH_USERS',\r\n   ADD_USERS: 'ADD_USERS',\r\n   USER_FETCH_ERROR: 'USER_FETCH_ERROR',\r\n   SET_FILTERS:'SET_FILTERS'\r\n};\r\nexport const getAction = (actionType, payload) => ({ type: actionType, payload });"],"sourceRoot":""}