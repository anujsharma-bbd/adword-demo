{"version":3,"sources":["shared/constants.js","actions/index.js","shared/components/status.component.js","components/campaigns/campaigns-table.component.js","components/campaign-filter/campain-filter.component.js","components/campaigns/campaigns-list.component.js"],"names":["Constants","USERS","getUsers","dispatch","Promise","resolve","reject","getAction","SharedActionTypes","SHOW_LOADER","fetch","then","res","a","json","result","ActionTypes","ADD_USERS","catch","err","USER_FETCH_ERROR","finally","s","HIDE_LOADER","addCampaigns","payload","ADD_CAMPAIGN_INTO_LIST","SetFilters","SET_FILTERS","StatusComponent","active","className","CampaignsTableComponent","list","users","map","item","index","key","campaignName","userID","user","find","x","id","name","getUserName","userId","format","startDate","endDate","budget","FilterComponent","props","state","byName","onStartChange","bind","onEndChange","onSearchNameChange","searchStart","toastr","options","positionClass","hideDuration","timeOut","clear","val","this","setState","moment","error","target","value","setFilters","InputGroup","dateFormat","placeholderText","selected","onChange","Input","placeholder","InputGroupAddon","addonType","Button","color","size","onClick","icon","faSearch","React","Component","connect","model","campaignModel","CampaignsListComponent","collectUsers","exposeAddition","AddCampaigns","onChangeFilters","userLoadingMessage","window","campaignsList","filterValue","filteredList","getFilteredList","filter","filtered","existedUser","toLowerCase","indexOf","filters","bindActionCreators"],"mappings":"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","file":"static/js/4.ff00cfb9.chunk.js","sourcesContent":["export const Constants = {\r\n   API_URLS: {\r\n      USERS: 'https://jsonplaceholder.typicode.com/users'\r\n   }\r\n};","import { getAction, ActionTypes } from \"./action-types\";\r\nimport {  SharedActionTypes } from \"../shared/actions/action-types\";\r\nimport { Constants } from \"../shared/constants\";\r\n\r\nexport const getUsers = () => {\r\n   return (dispatch) => {\r\n      return new Promise((resolve, reject) => {\r\n         dispatch(getAction(SharedActionTypes.SHOW_LOADER));\r\n         fetch(Constants.API_URLS.USERS)\r\n            .then(async res => {\r\n               const result = await res.json();\r\n               dispatch(getAction(ActionTypes.ADD_USERS, result));\r\n               resolve(true);\r\n            })\r\n            .catch(err => {\r\n               dispatch(getAction(ActionTypes.USER_FETCH_ERROR));\r\n               reject(false);\r\n            })\r\n            .finally(s => {\r\n               dispatch(getAction(SharedActionTypes.HIDE_LOADER));\r\n            });\r\n      })\r\n   }\r\n}\r\nexport const addCampaigns = (payload) => {\r\n   return (dispatch) => {\r\n      dispatch(getAction(ActionTypes.ADD_CAMPAIGN_INTO_LIST, payload));\r\n   }\r\n}\r\nexport const SetFilters = (payload) => {\r\n   return dispatch => {\r\n      dispatch(getAction(ActionTypes.SET_FILTERS, payload));\r\n   };\r\n}","import React from 'react';\r\n\r\nexport const StatusComponent = ({active}) => {\r\n   return (\r\n      active ? <span className='active'>Active</span> : <span className='inactive'>Inactive</span>\r\n   );\r\n}","import React from 'react';\r\nimport { StatusComponent } from '../../shared/components/status.component';\r\nimport Moment from 'react-moment';\r\n\r\nexport const CampaignsTableComponent = ({ list, users }) => {\r\n\r\n   const getUserName = (userID) => {\r\n      let user = users.find(x => x.id === userID);\r\n      return (user && user.name) || 'Unknown User';\r\n   }\r\n   return (\r\n      <div className=\"table-responsive\">\r\n         <table className=\"table\">\r\n            <thead>\r\n               <tr className='table-header'>\r\n                  <th>\r\n                     Name\r\n                        </th>\r\n\r\n                  <th>\r\n                     User Name\r\n                        </th>\r\n\r\n                  <th>\r\n                     Start Date\r\n                        </th>\r\n\r\n                  <th>\r\n                     End Date\r\n                        </th>\r\n\r\n                  <th>\r\n                     Active\r\n                        </th>\r\n\r\n                  <th>\r\n                     Budget\r\n                        </th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {\r\n                  list && list.map((item, index) => {\r\n                     return (\r\n                        <tr key={index}>\r\n                           <td>\r\n                              {item.campaignName}\r\n                           </td>\r\n                           <td>\r\n                              {getUserName(item.userId)}\r\n                           </td>\r\n                           <td>\r\n                              <Moment format=\"DD-MMM-YYYY\">\r\n                                 {item.startDate}\r\n                              </Moment>\r\n                           </td>\r\n                           <td>\r\n                              <Moment format=\"DD-MMM-YYYY\">\r\n                                 {item.endDate}\r\n                              </Moment>\r\n                           </td>\r\n                           <td>\r\n                              <StatusComponent active={item.active} />\r\n                           </td>\r\n                           <td>\r\n                              {item.budget}\r\n                           </td>\r\n                        </tr>\r\n                     )\r\n                  })\r\n               }\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { InputGroup, Input, InputGroupAddon, Button } from 'reactstrap';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport toastr from 'toastr';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n\r\nclass FilterComponent extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { startDate: null, endDate: null, byName: '' };\r\n      this.onStartChange = this.onStartChange.bind(this);\r\n      this.onEndChange = this.onEndChange.bind(this);\r\n      this.onSearchNameChange = this.onSearchNameChange.bind(this);\r\n      this.searchStart = this.searchStart.bind(this);\r\n      toastr.options = {\r\n         positionClass: 'toast-top-full-width',\r\n         hideDuration: 300,\r\n         timeOut: 60000\r\n      };\r\n      toastr.clear();\r\n   }\r\n\r\n   onStartChange(val) {\r\n      this.setState({ startDate: val, endDate: null });\r\n   }\r\n   onEndChange(val) {\r\n      toastr.clear();\r\n      if (moment(val) < moment(this.state.startDate)) {\r\n         toastr.error('End Date should be greater than Start Date.');\r\n         return;\r\n      }\r\n      this.setState({ endDate: val });\r\n   }\r\n   onSearchNameChange(val) {\r\n      this.setState({ byName: val.target.value });\r\n   }\r\n   searchStart() {\r\n      toastr.clear();\r\n      if ((this.state.startDate && !this.state.endDate) || (this.state.endDate && !this.state.startDate)) {\r\n         toastr.error('Please select both dates.');\r\n         return;\r\n      }\r\n      this.props.setFilters(\r\n         {\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            byName: this.state.byName\r\n         });\r\n   }\r\n   render() {\r\n      const { startDate, endDate, byName } = this.state;\r\n      return (\r\n         <div className='row mb-1'>\r\n            <div className='col-sm-7 filter-inputs'>\r\n               <InputGroup>\r\n                  <ReactDatePicker dateFormat=\"dd/MM/yyyy\" placeholderText='Start Date' className='form-control mr-1' selected={startDate} onChange={this.onStartChange} />\r\n                  <ReactDatePicker dateFormat=\"dd/MM/yyyy\" placeholderText='End Date' className='form-control mr-1' selected={endDate} onChange={this.onEndChange} />\r\n                  <Input placeholder=\"Search by name\" value={byName} onChange={this.onSearchNameChange} />\r\n               </InputGroup>\r\n            </div>\r\n            <div className='col-sm-2 pl-0'>\r\n               <InputGroupAddon addonType=\"append\">\r\n                  <Button color=\"primary\" size=\"md\" onClick={this.searchStart} >\r\n                     <FontAwesomeIcon icon={faSearch} />\r\n                  </Button>\r\n               </InputGroupAddon>\r\n            </div>\r\n            <div className='col-sm-4'></div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FilterComponent);","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUsers, addCampaigns, SetFilters } from '../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { CampaignsTableComponent } from './campaigns-table.component';\r\nimport FilterComponent from '../campaign-filter/campain-filter.component';\r\nimport moment from 'moment';\r\n\r\nclass CampaignsListComponent extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.collectUsers = this.collectUsers.bind(this);\r\n      this.exposeAddition = this.exposeAddition.bind(this);\r\n      this.AddCampaigns = this.AddCampaigns.bind(this);\r\n      this.onChangeFilters = this.onChangeFilters.bind(this);\r\n      this.state = { userLoadingMessage: '' };\r\n   }\r\n   componentDidMount() {\r\n      this.collectUsers();\r\n      this.exposeAddition();\r\n   }\r\n   collectUsers() {\r\n      this.props.getUsers()\r\n         .then((result) => {\r\n            if (result) {\r\n\r\n            }\r\n         });\r\n   }\r\n   exposeAddition() {\r\n      window.AddCampaigns = this.AddCampaigns;\r\n   }\r\n   AddCampaigns(campaignsList) {\r\n      this.props.addCampaigns(campaignsList);\r\n   }\r\n   onChangeFilters(filterValue) {\r\n      this.props.SetFilters(filterValue);\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <FilterComponent setFilters={this.onChangeFilters} />\r\n            <CampaignsTableComponent list={this.props.filteredList} users={this.props.model.users} />\r\n         </div >\r\n      );\r\n   }\r\n}\r\nconst getFilteredList = (list, filter, users) => {\r\n   let filtered = [...list];\r\n   if (!filter) { return filtered; }\r\n   if (filter.startDate && filter.endDate) {\r\n      filtered = filtered.filter(item => {\r\n         return (\r\n            (moment(item.startDate) >= moment(filter.startDate) && moment(item.startDate) <= moment(filter.endDate))\r\n            ||\r\n            (moment(item.endDate) >= moment(filter.startDate) && moment(item.endDate) <= moment(filter.endDate)))\r\n      })\r\n   }\r\n   if (filter.byName) {\r\n      let existedUser = users.find(item => item.name.toLowerCase().indexOf(filter.byName.toLowerCase()) !== -1);\r\n      if (!(existedUser)) {\r\n         return [];\r\n      }\r\n      filtered = filtered.filter(item => item.userId === existedUser.id);\r\n   }\r\n   return filtered;\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      model: state.campaignModel,\r\n      filteredList: getFilteredList(state.campaignModel.campaignsList, state.campaignModel.filters, state.campaignModel.users)\r\n   };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return bindActionCreators({\r\n      getUsers: getUsers,\r\n      addCampaigns: addCampaigns,\r\n      SetFilters: SetFilters\r\n   }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignsListComponent);"],"sourceRoot":""}